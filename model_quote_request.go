/*
1Click Swap API

API for One-Click Swaps

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oneclick

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the QuoteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteRequest{}

// QuoteRequest struct for QuoteRequest
type QuoteRequest struct {
	//    Flag indicating whether this is a dry run request.    If **true**, the response will **NOT** contain the following fields:       **depositAddress**           **timeWhenInactive**           **timeEstimate**           **deadline**
	Dry bool `json:"dry"`
	// Whether to use the amount as the output or the input for the basis of the swap.     EXACT_OUTPUT: the **refundTo** address will always receive excess tokens back even after the swap is complete.
	SwapType string `json:"swapType"`
	// Slippage tolerance for the swap. This value is in basis points (1/100th of a percent), e.g. 100 for 1% slippage.
	SlippageTolerance float32 `json:"slippageTolerance"`
	// ID of origin asset
	OriginAsset string `json:"originAsset"`
	// Type of deposit address      ORIGIN_CHAIN - deposit address on origin chain      INTENTS - **accountId** inside near intents to which you should transfer assets inside intents.
	DepositType string `json:"depositType"`
	// ID of destination asset
	DestinationAsset string `json:"destinationAsset"`
	// Amount to swap as the base amount (can be switched to exact input/output using the dedicated flag), denoted in the smallest unit of the specified currency (e.g., wei for ETH)
	Amount string `json:"amount"`
	// Address for user refund
	RefundTo string `json:"refundTo"`
	// Type of refund address       ORIGIN_CHAIN - assets will be refunded to **refundTo** address on origin chain        INTENTS - assets will be refunded to **refundTo** intents account
	RefundType string `json:"refundType"`
	// Recipient address, format should match **recipientType**
	Recipient string `json:"recipient"`
	// Type of recipient address       DESTINATION_CHAIN - assets will be transferred to chain of **destinationAsset**        INTENTS - assets will be transferred to account inside intents
	RecipientType string `json:"recipientType"`
	// Timestamp in ISO format, that identifies when user refund will begin if swap was`t completed by then
	Deadline time.Time `json:"deadline"`
	// Referral identifier
	Referral *string `json:"referral,omitempty"`
	// Time in milliseconds user is willing to wait for quote from relay
	QuoteWaitingTimeMs *float32 `json:"quoteWaitingTimeMs,omitempty"`
}

type _QuoteRequest QuoteRequest

// NewQuoteRequest instantiates a new QuoteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteRequest(dry bool, swapType string, slippageTolerance float32, originAsset string, depositType string, destinationAsset string, amount string, refundTo string, refundType string, recipient string, recipientType string, deadline time.Time) *QuoteRequest {
	this := QuoteRequest{}
	this.Dry = dry
	this.SwapType = swapType
	this.SlippageTolerance = slippageTolerance
	this.OriginAsset = originAsset
	this.DepositType = depositType
	this.DestinationAsset = destinationAsset
	this.Amount = amount
	this.RefundTo = refundTo
	this.RefundType = refundType
	this.Recipient = recipient
	this.RecipientType = recipientType
	this.Deadline = deadline
	var quoteWaitingTimeMs float32 = 3000
	this.QuoteWaitingTimeMs = &quoteWaitingTimeMs
	return &this
}

// NewQuoteRequestWithDefaults instantiates a new QuoteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteRequestWithDefaults() *QuoteRequest {
	this := QuoteRequest{}
	var quoteWaitingTimeMs float32 = 3000
	this.QuoteWaitingTimeMs = &quoteWaitingTimeMs
	return &this
}

// GetDry returns the Dry field value
func (o *QuoteRequest) GetDry() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Dry
}

// GetDryOk returns a tuple with the Dry field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetDryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dry, true
}

// SetDry sets field value
func (o *QuoteRequest) SetDry(v bool) {
	o.Dry = v
}

// GetSwapType returns the SwapType field value
func (o *QuoteRequest) GetSwapType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapType
}

// GetSwapTypeOk returns a tuple with the SwapType field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetSwapTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapType, true
}

// SetSwapType sets field value
func (o *QuoteRequest) SetSwapType(v string) {
	o.SwapType = v
}

// GetSlippageTolerance returns the SlippageTolerance field value
func (o *QuoteRequest) GetSlippageTolerance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SlippageTolerance
}

// GetSlippageToleranceOk returns a tuple with the SlippageTolerance field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetSlippageToleranceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlippageTolerance, true
}

// SetSlippageTolerance sets field value
func (o *QuoteRequest) SetSlippageTolerance(v float32) {
	o.SlippageTolerance = v
}

// GetOriginAsset returns the OriginAsset field value
func (o *QuoteRequest) GetOriginAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginAsset
}

// GetOriginAssetOk returns a tuple with the OriginAsset field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetOriginAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginAsset, true
}

// SetOriginAsset sets field value
func (o *QuoteRequest) SetOriginAsset(v string) {
	o.OriginAsset = v
}

// GetDepositType returns the DepositType field value
func (o *QuoteRequest) GetDepositType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepositType
}

// GetDepositTypeOk returns a tuple with the DepositType field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetDepositTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositType, true
}

// SetDepositType sets field value
func (o *QuoteRequest) SetDepositType(v string) {
	o.DepositType = v
}

// GetDestinationAsset returns the DestinationAsset field value
func (o *QuoteRequest) GetDestinationAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAsset
}

// GetDestinationAssetOk returns a tuple with the DestinationAsset field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetDestinationAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAsset, true
}

// SetDestinationAsset sets field value
func (o *QuoteRequest) SetDestinationAsset(v string) {
	o.DestinationAsset = v
}

// GetAmount returns the Amount field value
func (o *QuoteRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QuoteRequest) SetAmount(v string) {
	o.Amount = v
}

// GetRefundTo returns the RefundTo field value
func (o *QuoteRequest) GetRefundTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefundTo
}

// GetRefundToOk returns a tuple with the RefundTo field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetRefundToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundTo, true
}

// SetRefundTo sets field value
func (o *QuoteRequest) SetRefundTo(v string) {
	o.RefundTo = v
}

// GetRefundType returns the RefundType field value
func (o *QuoteRequest) GetRefundType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefundType
}

// GetRefundTypeOk returns a tuple with the RefundType field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetRefundTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundType, true
}

// SetRefundType sets field value
func (o *QuoteRequest) SetRefundType(v string) {
	o.RefundType = v
}

// GetRecipient returns the Recipient field value
func (o *QuoteRequest) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *QuoteRequest) SetRecipient(v string) {
	o.Recipient = v
}

// GetRecipientType returns the RecipientType field value
func (o *QuoteRequest) GetRecipientType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientType
}

// GetRecipientTypeOk returns a tuple with the RecipientType field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetRecipientTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientType, true
}

// SetRecipientType sets field value
func (o *QuoteRequest) SetRecipientType(v string) {
	o.RecipientType = v
}

// GetDeadline returns the Deadline field value
func (o *QuoteRequest) GetDeadline() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetDeadlineOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deadline, true
}

// SetDeadline sets field value
func (o *QuoteRequest) SetDeadline(v time.Time) {
	o.Deadline = v
}

// GetReferral returns the Referral field value if set, zero value otherwise.
func (o *QuoteRequest) GetReferral() string {
	if o == nil || IsNil(o.Referral) {
		var ret string
		return ret
	}
	return *o.Referral
}

// GetReferralOk returns a tuple with the Referral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetReferralOk() (*string, bool) {
	if o == nil || IsNil(o.Referral) {
		return nil, false
	}
	return o.Referral, true
}

// HasReferral returns a boolean if a field has been set.
func (o *QuoteRequest) HasReferral() bool {
	if o != nil && !IsNil(o.Referral) {
		return true
	}

	return false
}

// SetReferral gets a reference to the given string and assigns it to the Referral field.
func (o *QuoteRequest) SetReferral(v string) {
	o.Referral = &v
}

// GetQuoteWaitingTimeMs returns the QuoteWaitingTimeMs field value if set, zero value otherwise.
func (o *QuoteRequest) GetQuoteWaitingTimeMs() float32 {
	if o == nil || IsNil(o.QuoteWaitingTimeMs) {
		var ret float32
		return ret
	}
	return *o.QuoteWaitingTimeMs
}

// GetQuoteWaitingTimeMsOk returns a tuple with the QuoteWaitingTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteRequest) GetQuoteWaitingTimeMsOk() (*float32, bool) {
	if o == nil || IsNil(o.QuoteWaitingTimeMs) {
		return nil, false
	}
	return o.QuoteWaitingTimeMs, true
}

// HasQuoteWaitingTimeMs returns a boolean if a field has been set.
func (o *QuoteRequest) HasQuoteWaitingTimeMs() bool {
	if o != nil && !IsNil(o.QuoteWaitingTimeMs) {
		return true
	}

	return false
}

// SetQuoteWaitingTimeMs gets a reference to the given float32 and assigns it to the QuoteWaitingTimeMs field.
func (o *QuoteRequest) SetQuoteWaitingTimeMs(v float32) {
	o.QuoteWaitingTimeMs = &v
}

func (o QuoteRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dry"] = o.Dry
	toSerialize["swapType"] = o.SwapType
	toSerialize["slippageTolerance"] = o.SlippageTolerance
	toSerialize["originAsset"] = o.OriginAsset
	toSerialize["depositType"] = o.DepositType
	toSerialize["destinationAsset"] = o.DestinationAsset
	toSerialize["amount"] = o.Amount
	toSerialize["refundTo"] = o.RefundTo
	toSerialize["refundType"] = o.RefundType
	toSerialize["recipient"] = o.Recipient
	toSerialize["recipientType"] = o.RecipientType
	toSerialize["deadline"] = o.Deadline
	if !IsNil(o.Referral) {
		toSerialize["referral"] = o.Referral
	}
	if !IsNil(o.QuoteWaitingTimeMs) {
		toSerialize["quoteWaitingTimeMs"] = o.QuoteWaitingTimeMs
	}
	return toSerialize, nil
}

func (o *QuoteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dry",
		"swapType",
		"slippageTolerance",
		"originAsset",
		"depositType",
		"destinationAsset",
		"amount",
		"refundTo",
		"refundType",
		"recipient",
		"recipientType",
		"deadline",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteRequest := _QuoteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuoteRequest)

	if err != nil {
		return err
	}

	*o = QuoteRequest(varQuoteRequest)

	return err
}

type NullableQuoteRequest struct {
	value *QuoteRequest
	isSet bool
}

func (v NullableQuoteRequest) Get() *QuoteRequest {
	return v.value
}

func (v *NullableQuoteRequest) Set(val *QuoteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteRequest(val *QuoteRequest) *NullableQuoteRequest {
	return &NullableQuoteRequest{value: val, isSet: true}
}

func (v NullableQuoteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
