openapi: 3.0.0
info:
  contact: {}
  description: API for One-Click Swaps
  title: 1Click Swap API
  version: 0.1.8
servers:
- url: https://1click.chaindefuser.com
paths:
  /v0/tokens:
    get:
      description: |-
        Retrieves a list of tokens currently supported by the 1Click API for asset swaps.

        Each token entry includes its blockchain, contract address (if available), price in USD, and other metadata such as symbol and decimals.
      operationId: getTokens
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenResponse'
                type: array
          description: ""
      summary: Get supported tokens
      tags:
      - OneClick
  /v0/quote:
    post:
      description: |-
        Generates a swap quote based on input parameters such as the assets, amount, slippage tolerance, and recipient/refund information.

        Returns pricing details, estimated time, and a unique **deposit address** to which tokens must be transferred to initiate the swap.

        You can set the `dry` parameter to `true` to simulate the quote request **without generating a deposit address** or initiating the swap process. This is useful for previewing swap parameters or validating input data without committing to an actual swap.

        This endpoint is the first required step in the swap process.
      operationId: getQuote
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - JWT token is invalid
      security:
      - JWT-auth: []
      summary: Request a swap quote
      tags:
      - OneClick
  /v0/status:
    get:
      description: |-
        Retrieves the current status of a swap using the unique deposit address from the quote.

        The response includes the state of the swap (e.g., pending, processing, success, refunded) and any associated swap and transaction details.
      operationId: getExecutionStatus
      parameters:
      - explode: true
        in: query
        name: depositAddress
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExecutionStatusResponse'
          description: ""
        "401":
          description: Unauthorized - JWT token is invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Deposit address not found
      security:
      - JWT-auth: []
      summary: Check swap execution status
      tags:
      - OneClick
  /v0/deposit/submit:
    post:
      description: |-
        Optionally notifies the 1Click service that a deposit has been sent to the specified address, using the blockchain transaction hash.

        This step can speed up swap processing by allowing the system to preemptively verify the deposit.
      operationId: submitDepositTx
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitDepositTxRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitDepositTxResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - JWT token is invalid
      security:
      - JWT-auth: []
      summary: Submit deposit transaction hash
      tags:
      - OneClick
components:
  schemas:
    TokenResponse:
      example:
        symbol: wNEAR
        blockchain: near
        assetId: nep141:wrap.near
        price: 2.79
        decimals: 24
        priceUpdatedAt: 2025-03-28T12:23:00.07Z
        contractAddress: wrap.near
      properties:
        assetId:
          description: Unique asset identifier
          example: nep141:wrap.near
          type: string
        decimals:
          description: Number of decimals for the token
          example: 24
          type: number
        blockchain:
          description: Blockchain associated with the token
          enum:
          - near
          - eth
          - base
          - arb
          - btc
          - sol
          - ton
          - doge
          - xrp
          - zec
          - gnosis
          - bera
          - bsc
          - pol
          - tron
          - sui
          - op
          - avax
          example: near
          type: string
        symbol:
          description: "Token symbol (e.g. BTC, ETH)"
          example: wNEAR
          type: string
        price:
          description: Current price of the token in USD
          example: 2.79
          type: number
        priceUpdatedAt:
          description: Date when the token price was last updated
          example: 2025-03-28T12:23:00.07Z
          format: date-time
          type: string
        contractAddress:
          description: Contract address of the token
          example: wrap.near
          type: string
      required:
      - assetId
      - blockchain
      - decimals
      - price
      - priceUpdatedAt
      - symbol
      type: object
    AppFee:
      example:
        fee: 100
        recipient: recipient.near
      properties:
        recipient:
          description: Intents Account ID where this fee will be transferred to
          example: recipient.near
          type: string
        fee:
          description: "Fee for this recipient as part of amountIn in basis points\
            \ (1/100th of a percent), e.g. 100 for 1% fee"
          example: 100
          type: number
      required:
      - fee
      - recipient
      type: object
    QuoteRequest:
      example:
        quoteWaitingTimeMs: 3000
        amount: "1000"
        swapType: EXACT_INPUT
        appFees:
        - fee: 100
          recipient: recipient.near
        - fee: 100
          recipient: recipient.near
        dry: true
        destinationAsset: nep141:sol-5ce3bf3a31af18be40ba30f721101b4341690186.omft.near
        refundType: ORIGIN_CHAIN
        recipientType: DESTINATION_CHAIN
        referral: referral
        virtualChainRefundRecipient: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
        recipient: 13QkxhNMrTPxoCkRdYdJ65tFuwXPhL5gLS2Z5Nr6gjRK
        virtualChainRecipient: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
        slippageTolerance: 100
        deadline: 2019-08-24T14:15:22Z
        depositType: ORIGIN_CHAIN
        refundTo: 0x2527D02599Ba641c19FEa793cD0F167589a0f10D
        originAsset: nep141:arb-0xaf88d065e77c8cc2239327c5edb3a432268e5831.omft.near
      properties:
        dry:
          description: |-
            Flag indicating whether this is a dry run request.
            If `true`, the response will **NOT** contain the following fields:
            - `depositAddress`
            - `timeWhenInactive`
            - `deadline`
          example: true
          type: boolean
        swapType:
          description: |-
            Whether to use the amount as the output or the input for the basis of the swap:
            - `EXACT_INPUT` - request output amount for exact input.
            - `EXACT_OUTPUT` - request output amount for exact output. The `refundTo` address will always receive excess tokens back even after the swap is complete.
            - `FLEX_INPUT` - flexible input amount that allows for partial deposits and variable amounts.
          enum:
          - EXACT_INPUT
          - EXACT_OUTPUT
          - FLEX_INPUT
          type: string
        slippageTolerance:
          description: "Slippage tolerance for the swap. This value is in basis points\
            \ (1/100th of a percent), e.g. 100 for 1% slippage."
          example: 100
          type: number
        originAsset:
          description: ID of the origin asset.
          example: nep141:arb-0xaf88d065e77c8cc2239327c5edb3a432268e5831.omft.near
          type: string
        depositType:
          description: |-
            Type of the deposit address:
            - `ORIGIN_CHAIN` - deposit address on the origin chain
            - `INTENTS` - **account ID** inside near intents to which you should transfer assets inside intents.
          enum:
          - ORIGIN_CHAIN
          - INTENTS
          type: string
        destinationAsset:
          description: ID of the destination asset.
          example: nep141:sol-5ce3bf3a31af18be40ba30f721101b4341690186.omft.near
          type: string
        amount:
          description: "Amount to swap as the base amount (can be switched to exact\
            \ input/output using the dedicated flag), denoted in the smallest unit\
            \ of the specified currency (e.g., wei for ETH)."
          example: "1000"
          type: string
        refundTo:
          description: Address for user refund.
          example: 0x2527D02599Ba641c19FEa793cD0F167589a0f10D
          type: string
        refundType:
          description: |-
            Type of refund address:
            - `ORIGIN_CHAIN` - assets will be refunded to `refundTo` address on the origin chain
            - `INTENTS` - assets will be refunded to `refundTo` intents account
          enum:
          - ORIGIN_CHAIN
          - INTENTS
          type: string
        recipient:
          description: Recipient address. The format should match `recipientType`.
          example: 13QkxhNMrTPxoCkRdYdJ65tFuwXPhL5gLS2Z5Nr6gjRK
          type: string
        virtualChainRecipient:
          description: EVM address of a transfer recipient in a virtual chain
          example: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
          type: string
        virtualChainRefundRecipient:
          description: EVM address of a refund recipient in a virtual chain
          example: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
          type: string
        recipientType:
          description: |-
            Type of recipient address:
            - `DESTINATION_CHAIN` - assets will be transferred to chain of `destinationAsset`
            - `INTENTS` - assets will be transferred to account inside intents
          enum:
          - DESTINATION_CHAIN
          - INTENTS
          type: string
        deadline:
          description: "Timestamp in ISO format, that identifies when user refund\
            \ will begin if the swap isn't completed by then. It needs to exceed the\
            \ time required for the deposit tx to be minted, e.g. for Bitcoin it might\
            \ require ~1h depending on the gas fees paid."
          example: 2019-08-24T14:15:22Z
          format: date-time
          type: string
        referral:
          description: Referral identifier(lower case only). It will be reflected
            in the on-chain data and displayed on public analytics platforms.
          example: referral
          type: string
        quoteWaitingTimeMs:
          default: 3000
          description: Time in milliseconds user is willing to wait for quote from
            relay.
          example: 3000
          type: number
        appFees:
          description: List of recipients and their fees
          items:
            $ref: '#/components/schemas/AppFee'
          type: array
      required:
      - amount
      - deadline
      - depositType
      - destinationAsset
      - dry
      - originAsset
      - recipient
      - recipientType
      - refundTo
      - refundType
      - slippageTolerance
      - swapType
      type: object
    Quote:
      properties:
        depositAddress:
          description: |-
            The deposit address on the chain of `originAsset` in case if `depositType` is `ORIGIN_CHAIN`.

            The deposit address inside of near intents (the verifier smart contract) in case if `depositType` is `INTENTS`.
          example: 0x76b4c56085ED136a8744D52bE956396624a730E8
          type: string
        amountIn:
          description: Amount of the origin asset
          example: "1000000"
          type: string
        amountInFormatted:
          description: Amount of the origin asset in readable format
          example: "1"
          type: string
        amountInUsd:
          description: Amount of the origin assets equivalent in USD
          example: "1"
          type: string
        minAmountIn:
          description: Minimum amount of the origin asset that will be used for swap
          example: "995000"
          type: string
        amountOut:
          description: Amount of the destination asset
          example: "9950000"
          type: string
        amountOutFormatted:
          description: Amount of the destination asset in readable format
          example: "9.95"
          type: string
        amountOutUsd:
          description: Amount of the destination asset equivalent in USD
          example: "9.95"
          type: string
        minAmountOut:
          description: Minimum amount with slippage taken into account
          example: "9900000"
          type: string
        deadline:
          description: Time when the deposit address will become inactive and funds
            might be lost
          example: 2025-03-04T15:00:00Z
          format: date-time
          type: string
        timeWhenInactive:
          description: Time when the deposit address will become cold and swap processing
            will take more time
          example: 2025-03-04T15:00:00Z
          format: date-time
          type: string
        timeEstimate:
          description: Estimated time in seconds for swap to be executed after the
            deposit transaction is confirmed
          example: 120
          type: number
        virtualChainRecipient:
          description: EVM address of a transfer recipient in a virtual chain
          example: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
          type: string
        virtualChainRefundRecipient:
          description: EVM address of a refund recipient in a virtual chain
          example: 0xb4c2fbec9d610F9A3a9b843c47b1A8095ceC887C
          type: string
      required:
      - amountIn
      - amountInFormatted
      - amountInUsd
      - amountOut
      - amountOutFormatted
      - amountOutUsd
      - minAmountIn
      - minAmountOut
      - timeEstimate
      type: object
    QuoteResponse:
      example:
        quote: ""
        signature: signature
        quoteRequest: ""
        timestamp: 2019-08-24T14:15:22Z
      properties:
        timestamp:
          description: Timestamp in ISO format that took part in the deposit address
            derivation
          example: 2019-08-24T14:15:22Z
          format: date-time
          type: string
        signature:
          description: Signature of the 1Click service confirming the quote for the
            specific deposit address. Must be saved on the client side (along with
            the whole quote) in order to resolve any disputes or mistakes.
          type: string
        quoteRequest:
          allOf:
          - $ref: '#/components/schemas/QuoteRequest'
          description: User request
        quote:
          allOf:
          - $ref: '#/components/schemas/Quote'
          description: Response that contains the deposit address to send "amount"
            of `originAsset` and possible output amount.
      required:
      - quote
      - quoteRequest
      - signature
      - timestamp
      type: object
    BadRequestResponse:
      example:
        message: error message
      properties:
        message:
          example: error message
          type: string
      required:
      - message
      type: object
    TransactionDetails:
      properties:
        hash:
          description: Transaction hash
          example: 0x123abc456def789
          type: string
        explorerUrl:
          description: Explorer URL for the transaction
          type: string
      required:
      - explorerUrl
      - hash
      type: object
    SwapDetails:
      properties:
        intentHashes:
          description: All intent hashes that took part in this swap
          items:
            type: string
          type: array
        nearTxHashes:
          description: All Near transactions executed for this swap
          items:
            type: string
          type: array
        amountIn:
          description: Exact amount of `originToken` after trade was settled
          example: "1000"
          type: string
        amountInFormatted:
          description: Exact amount of `originToken` after trade was settled in readable
            format
          example: "0.1"
          type: string
        amountInUsd:
          description: Exact amount of `originToken` equivalent in USD
          example: "0.1"
          type: string
        amountOut:
          description: Exact amount of `destinationToken` after trade was settled
          example: "9950000"
          type: string
        amountOutFormatted:
          description: Exact amount of `destinationToken` in readable format
          example: "9.95"
          type: string
        amountOutUsd:
          description: Exact amount of `destinationToken` equivalent in USD
          example: "9.95"
          type: string
        slippage:
          description: Actual slippage
          example: 50
          type: number
        originChainTxHashes:
          description: Hashes and explorer URLs for all transactions on the origin
            chain
          items:
            $ref: '#/components/schemas/TransactionDetails'
          type: array
        destinationChainTxHashes:
          description: Hashes and explorer URLs for all transactions on the destination
            chain
          items:
            $ref: '#/components/schemas/TransactionDetails'
          type: array
        refundedAmount:
          description: Amount of `originAsset` that got transferred to `refundTo`
          example: "1000"
          type: string
        refundedAmountFormatted:
          description: Refunded amount in readable format
          example: "0.1"
          type: string
        refundedAmountUsd:
          description: Refunded amount equivalent in USD
          example: "0.1"
          type: string
      required:
      - destinationChainTxHashes
      - intentHashes
      - nearTxHashes
      - originChainTxHashes
      type: object
    GetExecutionStatusResponse:
      example:
        quoteResponse: ""
        swapDetails: ""
        status: KNOWN_DEPOSIT_TX
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        quoteResponse:
          allOf:
          - $ref: '#/components/schemas/QuoteResponse'
          description: Quote response from original request
        status:
          enum:
          - KNOWN_DEPOSIT_TX
          - PENDING_DEPOSIT
          - INCOMPLETE_DEPOSIT
          - PROCESSING
          - SUCCESS
          - REFUNDED
          - FAILED
          type: string
        updatedAt:
          description: Last time the state was updated
          format: date-time
          type: string
        swapDetails:
          allOf:
          - $ref: '#/components/schemas/SwapDetails'
          description: Details of actual swaps and withdrawals
      required:
      - quoteResponse
      - status
      - swapDetails
      - updatedAt
      type: object
    SubmitDepositTxRequest:
      example:
        depositAddress: 0x2527D02599Ba641c19FEa793cD0F167589a0f10D
        txHash: 0x123abc456def789
      properties:
        txHash:
          description: Transaction hash of your deposit
          example: 0x123abc456def789
          type: string
        depositAddress:
          description: Deposit address for the quote
          example: 0x2527D02599Ba641c19FEa793cD0F167589a0f10D
          type: string
      required:
      - depositAddress
      - txHash
      type: object
    SubmitDepositTxResponse:
      example:
        quoteResponse: ""
        swapDetails: ""
        status: KNOWN_DEPOSIT_TX
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        quoteResponse:
          allOf:
          - $ref: '#/components/schemas/QuoteResponse'
          description: Quote response from original request
        status:
          enum:
          - KNOWN_DEPOSIT_TX
          - PENDING_DEPOSIT
          - INCOMPLETE_DEPOSIT
          - PROCESSING
          - SUCCESS
          - REFUNDED
          - FAILED
          type: string
        updatedAt:
          description: Last time the state was updated
          format: date-time
          type: string
        swapDetails:
          allOf:
          - $ref: '#/components/schemas/SwapDetails'
          description: Details of actual swaps and withdrawals
      required:
      - quoteResponse
      - status
      - swapDetails
      - updatedAt
      type: object
  securitySchemes:
    JWT-auth:
      bearerFormat: JWT
      description: Enter JWT token (optional)
      scheme: bearer
      type: http
