/*
1Click Swap API

API for One-Click Swaps

API version: 0.1.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oneclick

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SubmitDepositTxRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitDepositTxRequest{}

// SubmitDepositTxRequest struct for SubmitDepositTxRequest
type SubmitDepositTxRequest struct {
	// Transaction hash of your deposit
	TxHash string `json:"txHash"`
	// Deposit address for the quote
	DepositAddress string `json:"depositAddress"`
}

type _SubmitDepositTxRequest SubmitDepositTxRequest

// NewSubmitDepositTxRequest instantiates a new SubmitDepositTxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitDepositTxRequest(txHash string, depositAddress string) *SubmitDepositTxRequest {
	this := SubmitDepositTxRequest{}
	this.TxHash = txHash
	this.DepositAddress = depositAddress
	return &this
}

// NewSubmitDepositTxRequestWithDefaults instantiates a new SubmitDepositTxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitDepositTxRequestWithDefaults() *SubmitDepositTxRequest {
	this := SubmitDepositTxRequest{}
	return &this
}

// GetTxHash returns the TxHash field value
func (o *SubmitDepositTxRequest) GetTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value
// and a boolean to check if the value has been set.
func (o *SubmitDepositTxRequest) GetTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHash, true
}

// SetTxHash sets field value
func (o *SubmitDepositTxRequest) SetTxHash(v string) {
	o.TxHash = v
}

// GetDepositAddress returns the DepositAddress field value
func (o *SubmitDepositTxRequest) GetDepositAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepositAddress
}

// GetDepositAddressOk returns a tuple with the DepositAddress field value
// and a boolean to check if the value has been set.
func (o *SubmitDepositTxRequest) GetDepositAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositAddress, true
}

// SetDepositAddress sets field value
func (o *SubmitDepositTxRequest) SetDepositAddress(v string) {
	o.DepositAddress = v
}

func (o SubmitDepositTxRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitDepositTxRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["txHash"] = o.TxHash
	toSerialize["depositAddress"] = o.DepositAddress
	return toSerialize, nil
}

func (o *SubmitDepositTxRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"txHash",
		"depositAddress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubmitDepositTxRequest := _SubmitDepositTxRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubmitDepositTxRequest)

	if err != nil {
		return err
	}

	*o = SubmitDepositTxRequest(varSubmitDepositTxRequest)

	return err
}

type NullableSubmitDepositTxRequest struct {
	value *SubmitDepositTxRequest
	isSet bool
}

func (v NullableSubmitDepositTxRequest) Get() *SubmitDepositTxRequest {
	return v.value
}

func (v *NullableSubmitDepositTxRequest) Set(val *SubmitDepositTxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitDepositTxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitDepositTxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitDepositTxRequest(val *SubmitDepositTxRequest) *NullableSubmitDepositTxRequest {
	return &NullableSubmitDepositTxRequest{value: val, isSet: true}
}

func (v NullableSubmitDepositTxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitDepositTxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
